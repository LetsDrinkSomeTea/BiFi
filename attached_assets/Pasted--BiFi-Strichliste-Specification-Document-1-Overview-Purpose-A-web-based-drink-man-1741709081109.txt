# BiFi Strichliste Specification Document

## 1. Overview

**Purpose:**  
A web-based drink management system that allows users to purchase drinks on a trust-based €1 per drink model, track consumption, manage balances (allowing negative balances), and access gamified features. The system supports both standard user and administrative functionalities.

**Key Goals:**  
- Simplify drink purchases with one-click actions.  
- Provide detailed transaction and consumption analytics.  
- Enhance user engagement through achievements and gamification.  
- Ensure robust security and compliance with modern web standards.

---

## 2. Architecture & Technology Stack

### 2.1 Frontend
- **Framework & Language:** React with TypeScript  
- **UI Framework:** shadcn/ui integrated with Tailwind CSS  
- **Routing:** wouter  
- **State Management:** TanStack Query  
- **Progressive Web App (PWA):**  
  - Offline capabilities  
  - Push notifications  
  - Responsive, mobile-first design  
- **Customization:**  
  - Theme options (light/dark mode)  
  - Configurable dashboard widgets (balance, transactions, achievements)

### 2.2 Backend
- **Server Environment:** Node.js (or equivalent) with a framework such as Express  
- **Authentication:**  
  - Custom session-based authentication (MemoryStore initially; scalable options like Redis later)  
  - OAuth2 integration with Google  
  - Optional Two-Factor Authentication (2FA) and mobile biometric support  
- **API Style:** RESTful endpoints  
- **Database:** PostgreSQL with support for schema migrations and backups  
- **Microservices:** Modular design with isolated services for authentication, transactions, and analytics (if scaling demands)

### 2.3 API & Integration
- **Internal APIs:** For frontend-backend communication covering all user and admin functionalities  
- **Public APIs:** Exposing a limited set of endpoints for third-party integrations (e.g., POS systems, event management)

---

## 3. Data Models

### 3.1 User Model
```typescript
{
  id: number,
  username: string,
  password: string, // stored as a scrypt hash
  email: string,
  balance: number, // can be negative
  isAdmin: boolean,
  passwordResetRequired: boolean,
  achievements: {
    firstPurchase: boolean,
    regularCustomer: boolean, // 10+ drinks
    bigSpender: boolean,      // balance below -€10
    streakBadge?: number,     // days of consecutive participation
    socialBadge?: boolean,    // for referrals/invites
    seasonalChallengeBadge?: boolean
  },
  settings: {
    theme: 'light' | 'dark',
    notifications: {
      lowBalance: boolean,
      spendingMilestone: boolean,
      achievementUnlocked: boolean,
    }
  },
  createdAt: string,
  updatedAt: string
}
```

### 3.2 Transaction Model
```typescript
{
  id: number,
  userId: number,
  amount: number,  // positive for deposits, negative for purchases, adjusted for discounts/promotions
  type: "PURCHASE" | "DEPOSIT" | "DISCOUNT" | "PROMOTION",
  createdAt: string
}
```

### 3.3 Audit/Event Log Model
```typescript
{
  id: number,
  eventType: "USER_UPDATE" | "TRANSACTION_UPDATE" | "SECURITY_EVENT",
  details: JSON,  // specifics of the event
  createdAt: string,
  adminId: number | null // if applicable
}
```

---

## 4. Features & User Stories

### 4.1 Authentication & User Management
- **Registration & Login:**  
  - New user registration with email, username, and password  
  - Login via credentials or OAuth2 (Google)  
  - Session-based authentication with secure token handling  
  - Password reset flow  
  - Optional 2FA and biometric support for enhanced security

- **User Profile & Settings:**  
  - View/update profile information  
  - Customize dashboard appearance (theme, widget selection)  
  - Manage notification preferences

### 4.2 Drink Purchase & Balance Management
- **One-Click Drink Purchase:**  
  - Each click deducts €1 (or applies promotion rules)  
  - Allow balance to drop into negative within a trust-based framework  
  - Transaction creation and immediate balance update

- **Dynamic Pricing & Promotions:**  
  - Support for seasonal discounts, “buy X get Y free” promotions  
  - Integration of multiple payment options (digital wallets like Google Pay, Apple Pay)  
  - Micro-deposit functionality for quick balance top-ups

### 4.3 Transaction History & Reporting
- **Transaction History:**  
  - Detailed table view listing each transaction with date, type, and amount  
  - Filtering options (by date range, type, amount)  
  - Export functionality (CSV, PDF)

- **Analytics Dashboard (User & Admin):**  
  - Real-time consumption statistics (drinks per day, balance trends)  
  - Interactive charts showing peak usage times and financial trends  
  - Admin reports with filters for user activity, overall system performance, and anomaly detection

### 4.4 Achievements & Gamification
- **Achievement System:**  
  - Core achievements: First Purchase, Regular Customer, Big Spender  
  - Extended achievements: Streaks, Social Referrals, Seasonal Challenges  
  - Visual badges with hover-over explanations  
  - Leaderboards for top consumers and most active users

- **Social & Community Features:**  
  - “Cheers” functionality: Users can send virtual clinks or compliments  
  - Social sharing integration for achievements (e.g., share to Twitter or Facebook)

### 4.5 Admin Features
- **User & Account Management:**  
  - View all users and filter by role or activity  
  - Reset user passwords and enforce password resets  
  - Add/remove users and bulk update balances  
  - Access audit logs detailing user and admin actions

- **Financial & Transaction Management:**  
  - Full view of all transactions with filter and export options  
  - Adjust user balances manually when required  
  - Real-time alert system for unusual spending patterns or negative balance spikes

### 4.6 Mobile/PWA Specific Features
- **Mobile Optimization & PWA:**  
  - Responsive design optimized for mobile and tablet use  
  - Offline mode with data synchronization once connectivity is restored  
  - Push notifications for events like new transactions or achievement unlocks

### 4.7 Public API & Third-Party Integration
- **Public Endpoints:**  
  - Limited access endpoints for user consumption data and transaction summaries  
  - Secure API key authentication for external services  
  - Documentation (e.g., Swagger) for integration partners

---

## 5. API Endpoints Specification

### 5.1 Authentication Endpoints
- **POST /api/auth/register**  
  - *Request:* `{ username, email, password }`  
  - *Response:* `{ userId, token }`

- **POST /api/auth/login**  
  - *Request:* `{ username, password }` or `{ googleOAuthToken }`  
  - *Response:* `{ userId, token }`

- **POST /api/auth/logout**  
  - Invalidate the current session

- **POST /api/auth/reset-password**  
  - *Request:* `{ email, newPassword }` (with validation token if required)  
  - *Response:* Confirmation message

- **POST /api/auth/2fa/setup**  
  - Configure 2FA for the user account

### 5.2 User Management Endpoints
- **GET /api/users**  
  - *Access:* Admin only  
  - *Response:* List of all user profiles

- **GET /api/users/:id**  
  - *Response:* Detailed user profile (limited data for non-admins)

- **PUT /api/users/:id**  
  - *Request:* Fields to update (profile info, settings)  
  - *Response:* Updated user profile

- **DELETE /api/users/:id**  
  - *Access:* Admin only  
  - *Response:* Deletion confirmation

### 5.3 Transaction Endpoints
- **POST /api/transactions/purchase**  
  - *Request:* `{ userId, quantity }` (default: 1 drink per click, apply promotions if applicable)  
  - *Response:* `{ transactionId, newBalance }`

- **POST /api/transactions/deposit**  
  - *Request:* `{ userId, amount }`  
  - *Response:* Updated balance

- **GET /api/transactions**  
  - *Query Params:* `userId, startDate, endDate, type`  
  - *Response:* Filtered transaction history

### 5.4 Achievements Endpoints
- **GET /api/achievements/:userId**  
  - *Response:* Achievement statuses and history for the user

- **POST /api/achievements/update**  
  - *Request:* Internal trigger (automated based on user activity)  
  - *Response:* Updated achievement records

### 5.5 Analytics & Reporting Endpoints
- **GET /api/analytics/summary**  
  - *Response:* Overview including active users, total drinks sold, financial metrics

- **GET /api/analytics/users**  
  - *Response:* Detailed per-user consumption analytics

- **GET /api/analytics/transactions**  
  - *Query Params:* Filters as needed  
  - *Response:* Aggregated transaction reports

### 5.6 Public API Endpoints
- **GET /api/public/users/:id**  
  - *Response:* Public profile data (limited) for third-party display

- **GET /api/public/transactions**  
  - *Access:* API key required  
  - *Response:* Limited transaction data for integration purposes

---

## 6. UI Components

### 6.1 Navigation
- **Global Navigation Bar:**  
  - Responsive design with a burger menu on mobile  
  - Role-based options (User vs. Admin)

### 6.2 User Dashboard
- **Balance Overview:**  
  - Display current balance with color-coded indicators for negative values  
- **Transaction History Table:**  
  - Paginated table with filters (date, type) and export buttons  
- **Achievements Panel:**  
  - Display earned badges with tooltip explanations  
- **Statistics & Analytics:**  
  - Interactive charts (e.g., line graphs for daily consumption)

### 6.3 Admin Dashboard
- **User Management Panel:**  
  - List of users with search and filtering options  
  - Bulk actions (e.g., balance adjustments, password resets)  
- **Transactions & Financials Panel:**  
  - Real-time transaction logs and exportable reports  
- **Alerts & Notifications:**  
  - Dashboard alerts for unusual activity or security events